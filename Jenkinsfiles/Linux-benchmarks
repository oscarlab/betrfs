#!/usr/bin/env groovy

pipeline {
  agent {
    label 'betrfs-dev'
  }

  stages {
    stage('Build') {
      steps {
        sh '''
        cd Jenkinsfiles
        touch console.out
        sudo chown libvirt-qemu console.out
        vagrant up
        sudo chmod +x build-bench.sh
        ./build-bench.sh
        result=\$?
        '''
      }
    }

    stage('Benchmarks') {
      steps {
        timeout(time: 30, unit: 'MINUTES'){
          sh '''
          cd Jenkinsfiles
          vagrant ssh -c "cd /oscar/betrfs/benchmarks/; sudo REPO=betrfs CUR_MNTPNT=/oscar ./run-benchmark.sh perf_tests"
          result=\$?
          '''
        }
      }
    }
  }

  post {
    always {
      script {
        try {
          sh '''
          cd Jenkinsfiles
          vagrant status
          vagrant ssh -c "/bin/dmesg"
          result=$?
          vagrant destroy -f
          cat console.out
          '''
        }
        catch (Exception e) {
          echo 'Exception occurred: ' + e.toString()
          sh 'cd Jenkinsfiles; vagrant destroy -f'
        }
      }
      findText regexp: 'The.*ceiling.*is.*the.*roof', alsoCheckConsoleOutput: true, succeedIfFound: true
      //findText regexp: 'ftfs\\serror', alsoCheckConsoleOutput: true, unstableIfFound: true
    }
  }
}
